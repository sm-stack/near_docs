"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2229],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>u});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),d=s(n),u=r,k=d["".concat(l,".").concat(u)]||d[u]||c[u]||i;return n?a.createElement(k,o(o({ref:t},m),{},{components:n})):a.createElement(k,o({ref:t},m))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:r,o[1]=p;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},18088:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>_,frontMatter:()=>l,metadata:()=>m,toc:()=>d});var a,r=n(87462),i=n(63366),o=(n(67294),n(3905)),p=["components"],l={sidebar_label:"Python\uc6a9 NFT \uc778\ub371\uc11c"},s="Python\uc6a9 NFT \uc778\ub371\uc11c \uad6c\ucd95",m={unversionedId:"tutorials/indexer/python-nft-indexer",id:"tutorials/indexer/python-nft-indexer",title:"Python\uc6a9 NFT \uc778\ub371\uc11c \uad6c\ucd95",description:"frolvanya/near-lake-nft-indexer: \uc774 \ud29c\ud1a0\ub9ac\uc5bc\uc758 \uc18c\uc2a4 \ucf54\ub4dc",source:"@site/../docs/3.tutorials/indexer/python-nft-indexer.md",sourceDirName:"3.tutorials/indexer",slug:"/tutorials/indexer/python-nft-indexer",permalink:"/near_docs/zh-CN/tutorials/indexer/python-nft-indexer",draft:!1,editUrl:"https://github.com/near/docs/edit/master/website/../docs/3.tutorials/indexer/python-nft-indexer.md",tags:[],version:"current",lastUpdatedBy:"[sm-stack]",lastUpdatedAt:1678337636,formattedLastUpdatedAt:"2023\u5e743\u67089\u65e5",frontMatter:{sidebar_label:"Python\uc6a9 NFT \uc778\ub371\uc11c"},sidebar:"\ud29c\ud1a0\ub9ac\uc5bc",previous:{title:"NFT \uc778\ub371\uc11c",permalink:"/near_docs/zh-CN/tutorials/indexer/nft-indexer"},next:{title:"\uc790\uaca9 \uc99d\uba85",permalink:"/near_docs/zh-CN/tutorials/indexer/credentials"}},c={},d=[{value:"\ubaa9\ud45c",id:"\ubaa9\ud45c",level:2},{value:"\ub3d9\uae30",id:"\ub3d9\uae30",level:2},{value:"\uc900\ube44",id:"\uc900\ube44",level:2},{value:"NEAR Lake \ud504\ub808\uc784\uc6cc\ud06c \uc124\uc815",id:"near-lake-\ud504\ub808\uc784\uc6cc\ud06c-\uc124\uc815",level:2},{value:"\uc774\ubca4\ud2b8\uc640 \uc774\ub97c \uac10\uc9c0\ud558\ub294 \ubc29\ubc95",id:"\uc774\ubca4\ud2b8\uc640-\uc774\ub97c-\uac10\uc9c0\ud558\ub294-\ubc29\ubc95",level:2},{value:"\ud544\uc694\ud55c \ub370\uc774\ud130\ub9cc \ud3ec\ucc29",id:"\ud544\uc694\ud55c-\ub370\uc774\ud130\ub9cc-\ud3ec\ucc29",level:2},{value:"\uac70\uc758 \uc644\ub8cc",id:"\uac70\uc758-\uc644\ub8cc",level:2},{value:"Paras\uc640 Mintbase\uc5d0\uc11c \ubc1c\ud589\ub41c NFT \ub9c1\ud06c \uc81c\uc791",id:"paras\uc640-mintbase\uc5d0\uc11c-\ubc1c\ud589\ub41c-nft-\ub9c1\ud06c-\uc81c\uc791",level:2},{value:"Paras \ud1a0\ud070 URL",id:"paras-\ud1a0\ud070-url",level:3},{value:"Mintbase \ud1a0\ud070 URL",id:"mintbase-\ud1a0\ud070-url",level:3},{value:"\uacb0\ub860",id:"\uacb0\ub860",level:2}],u=(a="ProgrammingLanguage",function(e){return console.warn("Component "+a+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",e)}),k={toc:d};function _(e){var t=e.components,n=(0,i.Z)(e,p);return(0,o.kt)("wrapper",(0,r.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"python\uc6a9-nft-\uc778\ub371\uc11c-\uad6c\ucd95"},"Python\uc6a9 NFT \uc778\ub371\uc11c \uad6c\ucd95"),(0,o.kt)(u,{lang:"python",mdxType:"ProgrammingLanguage"}),(0,o.kt)("admonition",{title:"\ud29c\ud1a0\ub9ac\uc5bc\uc758 \uc18c\uc2a4 \ucf54\ub4dc",type:"note"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("a",{parentName:"p",href:"https://github.com/frolvanya/near-lake-nft-indexer"},(0,o.kt)("inlineCode",{parentName:"a"},"frolvanya/near-lake-nft-indexer")),": \uc774 \ud29c\ud1a0\ub9ac\uc5bc\uc758 \uc18c\uc2a4 \ucf54\ub4dc")),(0,o.kt)("h2",{id:"\ubaa9\ud45c"},"\ubaa9\ud45c"),(0,o.kt)("p",null,"\uc774 \ud29c\ud1a0\ub9ac\uc5bc\uc740 ",(0,o.kt)("a",{parentName:"p",href:"https://near-indexers.io/docs/projects/near-lake-framework"},"Python\uc6a9 NEAR Lake \ud504\ub808\uc784\uc6cc\ud06c"),"\uc5d0 \uad6c\ucd95\ub41c \uc791\ub3d9\ud558\ub294 NFT \uc778\ub371\uc11c\ub97c \uad6c\ucd95\ud569\ub2c8\ub2e4. \uc778\ub371\uc11c\ub294 ",(0,o.kt)("inlineCode",{parentName:"p"},"nft_mint")," ",(0,o.kt)("a",{parentName:"p",href:"https://nomicon.io/Standards/EventsFormat"},"\uc774\ubca4\ud2b8"),"\ub97c \uac10\uc2dc\ud558\uace0 \ub2e4\uc74c\uacfc \uac19\uc740 \uad00\ub828 \ub370\uc774\ud130\ub97c \ucd9c\ub825\ud569\ub2c8\ub2e4."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\ubbfc\ud305\uc774 \ubc1c\uc0dd\ud55c ",(0,o.kt)("a",{parentName:"li",href:"https://near-indexers.io/docs/data-flow-and-structures/structures/receipt"},"Receipt")),(0,o.kt)("li",{parentName:"ul"},"\ub9c8\ucf13\ud50c\ub808\uc774\uc2a4"),(0,o.kt)("li",{parentName:"ul"},"NFT \uc18c\uc720\uc790 \uacc4\uc815 \uc774\ub984"),(0,o.kt)("li",{parentName:"ul"},"\ub9c8\ucf13\ud50c\ub808\uc774\uc2a4 \ub0b4 NFT\ub85c\uc758 \ub9c1\ud06c")),(0,o.kt)("p",null,"\ucd5c\uc885 \uc18c\uc2a4 \ucf54\ub4dc\ub294 GitHub ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/frolvanya/near-lake-nft-indexer"},(0,o.kt)("inlineCode",{parentName:"a"},"frolvanya/near-lake-nft-indexer")),"\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,o.kt)("h2",{id:"\ub3d9\uae30"},"\ub3d9\uae30"),(0,o.kt)("p",null,"NEAR Protocol\uc740 \uba4b\uc9c4 \uae30\ub2a5\uc778 ",(0,o.kt)("a",{parentName:"p",href:"https://nomicon.io/Standards/EventsFormat"},"Events"),"\ub97c \ub3c4\uc785\ud588\uc2b5\ub2c8\ub2e4. \uc774\ubca4\ud2b8\ub97c \ud1b5\ud574 \ucee8\ud2b8\ub799\ud2b8 \uac1c\ubc1c\uc790\ub294 \ud45c\uc900\ud654\ub41c \ub85c\uadf8\ub97c ",(0,o.kt)("a",{parentName:"p",href:"https://near-indexers.io/docs/data-flow-and-structures/structures/execution_outcome"},(0,o.kt)("inlineCode",{parentName:"a"},"ExecutionOutcomes")),"\uc5d0 \ucd94\uac00\ud560 \uc218 \uc788\uc73c\ubbc0\ub85c, \uc790\uc2e0\uc774\ub098 \ub2e4\ub978 \uac1c\ubc1c\uc790\uac00 API \ub610\ub294 \uc778\ub371\uc11c\ub97c \ud1b5\ud574 \ubcf4\ub2e4 \ud3b8\ub9ac\ud55c \ubc29\uc2dd\uc73c\ub85c \ud574\ub2f9 \ub85c\uadf8\ub97c \uc77d\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,o.kt)("p",null,"\uc774\ubca4\ud2b8\uc5d0\ub294 NEP\uc640 \uc77c\uce58\ud558\ub294 ",(0,o.kt)("inlineCode",{parentName:"p"},"standard")," \ud544\ub4dc\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ud29c\ud1a0\ub9ac\uc5bc\uc5d0\uc11c\ub294 ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/near/NEPs/discussions/171"},"NEP-171 \ub300\uccb4 \ubd88\uac00\ub2a5 \ud1a0\ud070 \ud45c\uc900"),"\uc5d0 \ub300\ud574 \uc124\uba85\ud569\ub2c8\ub2e4."),(0,o.kt)("p",null,'\uc774 \ud29c\ud1a0\ub9ac\uc5bc\uc5d0\uc11c \uc6b0\ub9ac\uc758 \ubaa9\ud45c\ub294, \uc774\ubca4\ud2b8 \ucee8\ud2b8\ub799\ud2b8\uac00 \ubc29\ucd9c\ud558\ub294 \uac83\uc744 "\ub4e3\ub294" \ubc29\ubc95\uacfc \uc774\ub97c \ud1b5\ud574 \uc5bb\uc744 \uc218 \uc788\ub294 \uc774\uc810\uc744 \ubcf4\uc5ec\uc8fc\ub294 \uac83\uc785\ub2c8\ub2e4.'),(0,o.kt)("p",null,"\uc608\ub97c \ub4e4\uc5b4,\uc6b0\ub9ac\ub294 ",(0,o.kt)("a",{parentName:"p",href:"https://nomicon.io/Standards/Tokens/NonFungibleToken/Event"},"NEP-171 \uc774\ubca4\ud2b8")," \ud45c\uc900\uc5d0 \ub530\ub77c \ubc1c\ud589\ub41c \ubaa8\ub4e0 NFT\ub97c \uac10\uc2dc\ud558\ub294 \uc778\ub371\uc11c\ub97c \uad6c\ucd95\ud560 \uac83\uc785\ub2c8\ub2e4. \uc6b0\ub9ac\ub294 \ud558\ub098\uc758 \uc774\ubca4\ud2b8\ub3c4 \ub193\uce58\uace0 \uc2f6\uc9c0 \uc54a\uc740 \uc0c1\ud669\uc785\ub2c8\ub2e4. \uc6b0\ub9ac\uc758 \uc778\ub371\uc11c\ub294 \ubc1c\ud589\ub41c \ubaa8\ub4e0 NFT\ub97c \uc778\uc2dd\ud558\uace0 \ubc1c\ud589\ub41c \uc601\uc218\uc99d\uacfc \uac19\uc740 \uae30\ubcf8 \ub370\uc774\ud130 \uc138\ud2b8\ub97c \uc81c\uacf5\ud558\uace0 \uc2dc\uc7a5\uc5d0 \ub300\ud55c \ub9c1\ud06c\ub97c \ubcf4\uc5ec\uc90d\ub2c8\ub2e4(\uc774 \uc608\uc5d0\uc11c\ub294 ",(0,o.kt)("a",{parentName:"p",href:"https://paras.id"},"Paras")," \ubc0f ",(0,o.kt)("a",{parentName:"p",href:"https://mintbase.io"},"Mintbase"),"\ub97c \ub2e4\ub8f0 \uac83\uc785\ub2c8\ub2e4)."),(0,o.kt)("p",null,"\uc774 \ud29c\ud1a0\ub9ac\uc5bc\uc5d0\uc11c\ub294 Python \ubc84\uc804\uc758 ",(0,o.kt)("a",{parentName:"p",href:"https://near-indexers.io/docs/projects/near-lake-framework"},"NEAR Lake \ud504\ub808\uc784\uc6cc\ud06c"),"\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. Rust\uc5d0\uc11c\ub3c4 \uac1c\ub150\uc740 \ub3d9\uc77c\ud558\uc9c0\ub9cc, \ub354 \ub9ce\uc740 \uc0ac\ub78c\ub4e4\uc5d0\uac8c \uc790\uc2e0\ub9cc\uc758 \uc778\ub371\uc11c\ub97c \uad6c\ucd95\ud558\ub294 \uac83\uc774 \uadf8\ub807\uac8c \ubcf5\uc7a1\ud558\uc9c0 \uc54a\ub2e4\ub294 \uac83\uc744 \ubcf4\uc5ec\uc8fc\uace0 \uc2f6\uc2b5\ub2c8\ub2e4."),(0,o.kt)("h2",{id:"\uc900\ube44"},"\uc900\ube44"),(0,o.kt)("admonition",{title:"\uc790\uaca9 \uc99d\uba85",type:"danger"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("a",{parentName:"p",href:"/near_docs/zh-CN/tutorials/indexer/credentials"},"\uc790\uaca9 \uc99d\uba85")," \ud398\uc774\uc9c0\uc5d0 \uc124\uba85\ub41c \ub300\ub85c \uc790\uaca9 \uc99d\uba85\uc744 \uc124\uc815\ud588\ub294\uc9c0 \ud655\uc778\ud558\uc138\uc694. \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \ucf54\ub4dc\ub97c \uc791\ub3d9\uc2dc\ud0ac \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.")),(0,o.kt)("p",null,"\ud504\ub85c\uc81d\ud2b8 \ud3f4\ub354\ub97c \ub9cc\ub4e4\uc5b4 \ubd05\uc2dc\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir lake-nft-indexer && cd lake-nft-indexer\ntouch main.py\n")),(0,o.kt)("h2",{id:"near-lake-\ud504\ub808\uc784\uc6cc\ud06c-\uc124\uc815"},"NEAR Lake \ud504\ub808\uc784\uc6cc\ud06c \uc124\uc815"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"main.py"),"\uc5d0\uc11c ",(0,o.kt)("inlineCode",{parentName:"p"},"near-lake-framework"),"\ub85c\ubd80\ud130 ",(0,o.kt)("inlineCode",{parentName:"p"},"stream")," \ud568\uc218\uc640 ",(0,o.kt)("inlineCode",{parentName:"p"},"near_primitives"),"\ub97c \uac00\uc838\uc635\uc2dc\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title=main.py",title:"main.py"},"from near_lake_framework import near_primitives, LakeConfig, streamer\n")),(0,o.kt)("p",null,"main \ud568\uc218\ub97c \ucd94\uac00\ud569\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title=main.py",title:"main.py"},'async def main():\n    print("Starting NFT indexer")\n')),(0,o.kt)("p",null,"\uc544\ub798\uc640 \uac19\uc774 ",(0,o.kt)("inlineCode",{parentName:"p"},"LakeConfig"),"\uc758 \uc778\uc2a4\ud134\uc2a4\ud654\ub97c \ucd94\uac00\ud558\uc138\uc694."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title=main.py",title:"main.py"},'config = LakeConfig.mainnet()\nconfig.start_block_height = 69030747\nconfig.aws_access_key_id = os.getenv("AWS_ACCESS_KEY_ID")\nconfig.aws_secret_key = os.getenv("AWS_SECRET_ACCESS_KEY")\n')),(0,o.kt)("p",null,"\uad6c\uc131(config)\uc5d0 \ub300\ud574 \uba87 \ub9c8\ub514 \ud558\uc790\uba74, \uba54\uc778\ub137\uc5d0 \ub300\ud574\uc11c\ub294 ",(0,o.kt)("inlineCode",{parentName:"p"},"mainnet()"),"\ud568\uc218\uac00  ",(0,o.kt)("inlineCode",{parentName:"p"},"s3_bucket_name"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"s3_region_name"),"\uc744 \uc124\uc815\ud558\uc600\uc2b5\ub2c8\ub2e4. ",(0,o.kt)("a",{parentName:"p",href:"https://explorer.near.org"},"NEAR \uc775\uc2a4\ud50c\ub85c\ub7ec"),"\ub85c \uc774\ub3d9\ud558\uc5ec, ",(0,o.kt)("strong",{parentName:"p"},"\ucd5c\uc2e0")," \ube14\ub85d \ub192\uc774\ub97c \uc5bb\uc5b4 ",(0,o.kt)("inlineCode",{parentName:"p"},"config.start_block_height"),"\ub97c \uc124\uc815\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. "),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"config"),"\ub85c ",(0,o.kt)("inlineCode",{parentName:"p"},"streamer")," \ud568\uc218\ub97c \ud638\ucd9c\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title=main.py",title:"main.py"},"stream_handle, streamer_messages_queue = streamer(config)\nwhile True:\n    streamer_message = await streamer_messages_queue.get()\n")),(0,o.kt)("p",null,"\uadf8\ub9ac\uace0 ",(0,o.kt)("inlineCode",{parentName:"p"},"main.py")," \ub9c8\uc9c0\ub9c9 \ubd80\ubd84\uc5d0\uc11c \uc778\ub371\uc11c\uc758 \uc2e4\uc81c \uc2dc\uc791\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title=main.py",title:"main.py"},"loop = asyncio.get_event_loop()\nloop.run_until_complete(main())\n")),(0,o.kt)("p",null,"\uc774 \uc2dc\uc810\uc5d0\uc11c \ucd5c\uc885 ",(0,o.kt)("inlineCode",{parentName:"p"},"main.py"),"\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title=main.py",title:"main.py"},'from near_lake_framework import LakeConfig, streamer, near_primitives\nasync def main():\n    print("Starting NFT indexer")\n    \n    config = LakeConfig.mainnet()\n    config.start_block_height = 69030747\n    config.aws_access_key_id = os.getenv("AWS_ACCESS_KEY_ID")\n    config.aws_secret_key = os.getenv("AWS_SECRET_ACCESS_KEY")\n\n    stream_handle, streamer_messages_queue = streamer(config)\n    while True:\n        streamer_message = await streamer_messages_queue.get()\n\nloop = asyncio.get_event_loop()\nloop.run_until_complete(main())\n')),(0,o.kt)("p",null,"\uc774\uc81c \uc778\ub371\uc11c\uac00 \ubc1b\ub294 ",(0,o.kt)("a",{parentName:"p",href:"https://near-indexers.io/docs/data-flow-and-structures/structures/toc"},(0,o.kt)("inlineCode",{parentName:"a"},"StreamerMessage")),"\ub97c \ucc98\ub9ac\ud558\uae30 \uc704\ud574 \ud638\ucd9c\ud560 \ucf5c\ubc31 \ud568\uc218\ub97c \ub9cc\ub4e4\uc5b4\uc57c \ud569\ub2c8\ub2e4 ."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title=main.py",title:"main.py"},"async def handle_streamer_message(streamer_message: near_primitives.StreamerMessage):\n    pass\n")),(0,o.kt)("h2",{id:"\uc774\ubca4\ud2b8\uc640-\uc774\ub97c-\uac10\uc9c0\ud558\ub294-\ubc29\ubc95"},"\uc774\ubca4\ud2b8\uc640 \uc774\ub97c \uac10\uc9c0\ud558\ub294 \ubc29\ubc95"),(0,o.kt)("p",null,"\uc6b0\uc120 \uc6b0\ub9ac\uac00 \uc774\ubca4\ud2b8\ub97c \uac10\uc9c0\ud560 \uc218 \uc788\ub294 \uacf3\uc744 \ucc3e\uc544\ubd05\uc2dc\ub2e4. ",(0,o.kt)("a",{parentName:"p",href:"https://near-indexers.io/docs/data-flow-and-structures/flow/near-data-flow"},"NEAR \ube14\ub85d\uccb4\uc778\uc758 \ub370\uc774\ud130 \ud750\ub984"),"\uc5d0 \ub300\ud574 \uc798 \uc54c\uace0 \uacc4\uc2dc\uae30\ub97c \ubc14\ub78d\ub2c8\ub2e4. \uc54c\uace0 \uc788\ub358 \uac83\ub4e4\uc744 \uc218\uc815\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"NFT\ub97c \uc0dd\uc131\ud558\ub294 \uac83\uc740 NFT \ucee8\ud2b8\ub799\ud2b8 \ub0b4 \uc791\uc5c5\uc785\ub2c8\ub2e4(\uc5b4\ub290 \uac83\uc774\ub4e0 \uc0c1\uad00 \uc5c6\uc74c)."),(0,o.kt)("li",{parentName:"ul"},"\uc791\uc5c5\uc740 ",(0,o.kt)("a",{parentName:"li",href:"https://near-indexers.io/docs/data-flow-and-structures/structures/receipt"},"Receipt")," \ub0b4 \uc704\uce58\ud569\ub2c8\ub2e4."),(0,o.kt)("li",{parentName:"ul"},"Receipt \uc2e4\ud589 \uacb0\uacfc\ub294 ",(0,o.kt)("a",{parentName:"li",href:"https://near-indexers.io/docs/data-flow-and-structures/structures/execution_outcome"},"ExecutionOutcome"),"\uc785\ub2c8\ub2e4."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ExecutionOutcome"),'\ub294 \ub530\ub77c\uc11c, \ucc28\ub840\ub85c \ucee8\ud2b8\ub799\ud2b8\uac00 "\ucd9c\ub825"\ud558\ub294 \ub85c\uadf8\ub97c \uc7a1\uc2b5\ub2c8\ub2e4.'),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://nomicon.io/Standards/EventsFormat"},"Events"),"\ub294 \ub85c\uadf8 \ub0b4\uc5d0 \uc874\uc7ac\ud569\ub2c8\ub2e4.")),(0,o.kt)("p",null,"\uc774\ub85c \uc778\ud574 \uc6b0\ub9ac\ub294 ExecutionOutcomes\ub9cc \ubcfc \uc218 \uc788\uace0, ",(0,o.kt)("inlineCode",{parentName:"p"},"StreamerMessage"),"\uac00 \uac00\uc838\uc624\ub294 \ub2e4\ub978 \ubaa8\ub4e0 \uac83\uc740 \ubb34\uc2dc\ub420 \uc218 \uc788\ub2e4\ub294 \uc0ac\uc2e4\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,o.kt)("h2",{id:"\ud544\uc694\ud55c-\ub370\uc774\ud130\ub9cc-\ud3ec\ucc29"},"\ud544\uc694\ud55c \ub370\uc774\ud130\ub9cc \ud3ec\ucc29"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"#%EC%A4%80%EB%B9%84"},"\uc900\ube44")," \uc139\uc158\uc5d0\uc11c \uc900\ube44\ud55c \ucf5c\ubc31 \ud568\uc218 ",(0,o.kt)("inlineCode",{parentName:"p"},"handle_streamer_message")," \ub0b4\uc5d0\uc11c \ud544\uc694\ud55c \ub370\uc774\ud130 \ud544\ud130\ub9c1\uc744 \uc2dc\uc791\ud558\uaca0\uc2b5\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title=main.py",title:"main.py"},"async def handle_streamer_message(streamer_message: near_primitives.StreamerMessage):\n    for shard in streamer_message.shards:\n        for receipt_execution_outcome in shard.receipt_execution_outcomes:\n            for log in receipt_execution_outcome.execution_outcome.outcome.logs:\n                pass\n")),(0,o.kt)("p",null,"\uc6b0\ub9ac\ub294 \ubaa8\ub4e0 ",(0,o.kt)("a",{parentName:"p",href:"https://near-indexers.io/docs/data-flow-and-structures/structures/shard"},"\uc0e4\ub4dc"),"\uc5d0 \ub300\ud574 \ubc18\ubcf5\ud558\uace0, \ubaa8\ub4e0 ExecutionOutcomes \ubaa9\ub85d\uc744 \ub2e8\uc77c \ubaa9\ub85d\uc73c\ub85c \uc218\uc9d1\ud588\uc2b5\ub2c8\ub2e4(\uc6b0\ub9ac\uc758 \uacbd\uc6b0 \uc5b4\ub5a4 \uc0e4\ub4dc\uc5d0\uc11c \ubbfc\ud305\uc774 \ubc1c\uc0dd\ud588\ub294\uc9c0\ub294 \uc2e0\uacbd \uc4f0\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4)."),(0,o.kt)("p",null,"\uc774\uc81c \uc774\ubca4\ud2b8 \ud615\uc2dd\uc758 \ub85c\uadf8\ub97c \ud3ec\ud568\ud558\ub294 ExecutionOutcomes\ub9cc \ucc98\ub9ac\ud558\ub824\uace0 \ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ub85c\uadf8\ub294 ",(0,o.kt)("a",{parentName:"p",href:"https://nomicon.io/Standards/EventsFormat#events"},"Events \ubb38\uc11c"),"\uc5d0 \ub530\ub77c ",(0,o.kt)("inlineCode",{parentName:"p"},"EVENT_JSON:"),"\uc73c\ub85c \uc2dc\uc791\ub429\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title=main.py",title:"main.py"},'async def handle_streamer_message(streamer_message: near_primitives.StreamerMessage):\n    for shard in streamer_message.shards:\n        for receipt_execution_outcome in shard.receipt_execution_outcomes:\n            for log in receipt_execution_outcome.execution_outcome.outcome.logs:\n                if not log.startswith("EVENT_JSON:"):\n                    continue\n                try:\n                    parsed_log = json.loads(log[len("EVENT_JSON:") :])\n                except json.JSONDecodeError:\n                    print(\n                        f"Receipt ID: `{receipt_execution_outcome.receipt.receipt_id}`\\nError during parsing logs from JSON string to dict"\n                    )\n                    continue\n')),(0,o.kt)("p",null,"\uc5ec\uae30\uc11c \uc6b0\ub9ac\uac00 \ubb34\uc5c7\uc744 \ud558\ub294\uc9c0 \uc124\uba85\ud558\uaca0\uc2b5\ub2c8\ub2e4."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"ExecutionOutcomes\ub97c \uc9c4\ud589 \uc911\uc785\ub2c8\ub2e4."),(0,o.kt)("li",{parentName:"ol"},"\uc774\ubca4\ud2b8 \ud615\uc2dd\uc758 \ub85c\uadf8\ub97c \ud3ec\ud568\ud558\ub294 ExecutionOutcomes\ub97c \ud544\ud130\ub9c1\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4."),(0,o.kt)("li",{parentName:"ol"},"\uc774\ubca4\ud2b8\ub97c \uc218\uc9d1\ud558\uae30 \uc704\ud574, ",(0,o.kt)("inlineCode",{parentName:"li"},"json.loads"),"\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc774\ubca4\ud2b8\ub97c \ud30c\uc2f1\ud558\ub824\ub294 ExecutionOutcome\uc758 \ub85c\uadf8\ub97c \ubc18\ubcf5\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. ")),(0,o.kt)("p",null,"\uc778\ub371\uc11c\uc758 \ubaa9\ud45c\ub294 NEP-171 \ud45c\uc900\uc744 \ub530\ub974\ub294 \ubc1c\ud589\ub41c NFT\uc5d0 \ub300\ud55c \uc720\uc6a9\ud55c \ub370\uc774\ud130\ub97c \ubc18\ud658\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774\uc5d0 \ub530\ub77c, \uad00\ub828 \uc5c6\ub294 \ud45c\uc900 \uc774\ubca4\ud2b8\ub97c \uc0ad\uc81c\ud574\uc57c \ud569\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title=main.py",title:"main.py"},'    if (\n        parsed_log.get("standard") != "nep171"\n        or parsed_log.get("event") != "nft_mint"\n    ):\n        continue\n')),(0,o.kt)("h2",{id:"\uac70\uc758-\uc644\ub8cc"},"\uac70\uc758 \uc644\ub8cc"),(0,o.kt)("p",null,"\uc9c0\uae08\uae4c\uc9c0 \uc694\uad6c \uc0ac\ud56d\uc5d0 \ub530\ub77c \ud544\uc694\ud55c \ubaa8\ub4e0 \uac83\uc744 \uc218\uc9d1\ud588\uc2b5\ub2c8\ub2e4."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"handle_streamer_message")," \ud568\uc218\uc758 \ucd5c\uc885 \ubaa8\uc2b5\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title=main.py",title:"main.py"},'async def handle_streamer_message(streamer_message: near_primitives.StreamerMessage):\n    for shard in streamer_message.shards:\n        for receipt_execution_outcome in shard.receipt_execution_outcomes:\n            for log in receipt_execution_outcome.execution_outcome.outcome.logs:\n                if not log.startswith("EVENT_JSON:"):\n                    continue\n                try:\n                    parsed_log = json.loads(log[len("EVENT_JSON:") :])\n                except json.JSONDecodeError:\n                    print(\n                        f"Receipt ID: `{receipt_execution_outcome.receipt.receipt_id}`\\nError during parsing logs from JSON string to dict"\n                    )\n                    continue\n\n                if (\n                    parsed_log.get("standard") != "nep171"\n                    or parsed_log.get("event") != "nft_mint"\n                ):\n                    continue\n\n                print(parsed_log)\n')),(0,o.kt)("p",null,"\uc774\uc81c ",(0,o.kt)("inlineCode",{parentName:"p"},"main")," \ud568\uc218 \ub0b4 \ubc18\ubcf5\ubb38\uc5d0\uc11c ",(0,o.kt)("inlineCode",{parentName:"p"},"handle_streamer_message"),"\ub97c \ud638\ucd9c\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title=main.py",title:"main.py"},"await handle_streamer_message(streamer_message)\n")),(0,o.kt)("p",null,"\uc778\ub371\uc11c\ub97c \uc2e4\ud589\ud558\uba74, \uc774\ub294 ",(0,o.kt)("inlineCode",{parentName:"p"},"nft_mint")," \uc774\ubca4\ud2b8\ub97c \ud3ec\ucc29\ud558\uace0 \ud130\ubbf8\ub110\uc5d0 \ub370\uc774\ud130\ub97c \ucd9c\ub825\ud569\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"python3 main.py\n")),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"\uc778\ub371\uc11c\ub97c \uc2e4\ud589\ud558\ub294 \ub370 \ubb38\uc81c\uac00 \uc788\ub098\uc694? ",(0,o.kt)("a",{parentName:"p",href:"/near_docs/zh-CN/tutorials/indexer/credentials"},"\uc790\uaca9 \uc99d\uba85")," \ubd80\ubd84\uc744 \uac74\ub108\ub6f0\uc9c0 \uc54a\uc558\ub294\uc9c0 \ud655\uc778\ud558\uc138\uc694 :)")),(0,o.kt)("p",null,"\uadf8\ub807\uac8c \ube60\ub974\uc9c4 \uc54a\uc2b5\ub2c8\ub2e4! \ubc1c\ud589\ub41c \ud1a0\ud070\uc744 \ubcfc \uc218 \uc788\ub294 \ub9c8\ucf13\ud50c\ub808\uc774\uc2a4 \ub9c1\ud06c\uc5d0 \ub300\ud574 \uc774\uc57c\uae30\ud588\ub358 \uac83\uc744 \uae30\uc5b5\ud558\uc2ed\ub2c8\uae4c? \uc774\uc81c, \uac00\ub2a5\ud560 \ub54c\ub9c8\ub2e4 \ud574\ub2f9 \ub9c1\ud06c\ub85c \ub370\uc774\ud130\ub97c \ud655\uc7a5\ud560 \uac83\uc785\ub2c8\ub2e4. \uc801\uc5b4\ub3c4 \uc6b0\ub9ac\ub294 ",(0,o.kt)("a",{parentName:"p",href:"https://paras.id"},"Paras"),"\uc640 ",(0,o.kt)("a",{parentName:"p",href:"https://mintbase.io"},"Mintbase"),"\uc5d0\uc11c \ubc1c\ud589\ub41c NFT\ub97c \ucc98\ub9ac\ud558\ub294 \ubc29\ubc95\uc744 \ubcf4\uc5ec\uc904 \uac83\uc785\ub2c8\ub2e4."),(0,o.kt)("h2",{id:"paras\uc640-mintbase\uc5d0\uc11c-\ubc1c\ud589\ub41c-nft-\ub9c1\ud06c-\uc81c\uc791"},"Paras\uc640 Mintbase\uc5d0\uc11c \ubc1c\ud589\ub41c NFT \ub9c1\ud06c \uc81c\uc791"),(0,o.kt)("p",null,"\ud604\uc7ac \uc6b0\ub9ac\ub294 \uc218\uc2e0, \uc2e4\ud589 \uc0c1\ud0dc \ubc0f \uc774\ubca4\ud2b8 \ub85c\uadf8\ub97c \ub178\ucd9c\ud558\ub294 \uac1d\uccb4 \ubc30\uc5f4\uc744 \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc6b0\ub9ac\ub294 \ud604\uc7ac \uc6b0\ub9ac\uac00 \uac00\uc9c0\uace0 \uc788\ub294 \ubaa8\ub4e0 \ub370\uc774\ud130\uac00 \uc6b0\ub9ac\uc640 \uad00\ub828\uc774 \uc788\ub2e4\ub294 \uac83\uc744 \ud655\uc2e4\ud788 \uc54c\uace0 \uc788\uc73c\uba70, \uc801\uc5b4\ub3c4 \uc6b0\ub9ac\uac00 \uc54c\uace0 \uc788\ub294 \ub9c8\ucf13\ud50c\ub808\uc774\uc2a4\ub97c \uc704\ud574 \ubc1c\ud589\ub41c NFT\uc5d0 \ub300\ud55c \ub9c1\ud06c\ub85c \ud655\uc7a5\ud558\uace0\uc790 \ud569\ub2c8\ub2e4."),(0,o.kt)("p",null,"\uc6b0\ub9ac\ub294 Paras\uc640 Mintbase\ub97c \uc798 \uc54c\uace0 \uc788\uace0 \uc88b\uc544\ud569\ub2c8\ub2e4."),(0,o.kt)("h3",{id:"paras-\ud1a0\ud070-url"},"Paras \ud1a0\ud070 URL"),(0,o.kt)("p",null,"\ub2f9\uc2e0\uc744 \uc704\ud574 \uc870\uc0ac\ud55c \uacb0\uacfc, Paras\uc5d0\uc11c \ud1a0\ud070\uc5d0 \ub300\ud55c URL\uc744 \ub9cc\ub4dc\ub294 \ubc29\ubc95\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"https://paras.id/token/[1]::[2]/[3]\n")),(0,o.kt)("p",null,"\uc5ec\uae30\uc11c:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"[1]"," - Paras \ucee8\ud2b8\ub799\ud2b8 \uc8fc\uc18c (",(0,o.kt)("inlineCode",{parentName:"li"},"x.paras.near"),")"),(0,o.kt)("li",{parentName:"ul"},"[2]"," - ",(0,o.kt)("inlineCode",{parentName:"li"},"token_id"),"\uc758 \uccab \ubc88\uc9f8 \ubd80\ubd84 (Paras\uc758 ",(0,o.kt)("inlineCode",{parentName:"li"},"EventLogData.data"),"\ub294 ",(0,o.kt)("inlineCode",{parentName:"li"},"token_ids")," \ud0a4\uac00 \uc788\ub294 \uac1d\uccb4 \ubc30\uc5f4\uc785\ub2c8\ub2e4. \ud574\ub2f9 ID\ub294 \uc0ac\uc774\uc5d0 ",(0,o.kt)("inlineCode",{parentName:"li"},":")," \uc5f4\uc774 \uc788\ub294 \uc22b\uc790\ub4e4\ub85c \ud45c\ud604\ub429\ub2c8\ub2e4.)"),(0,o.kt)("li",{parentName:"ul"},"[3]"," - ",(0,o.kt)("inlineCode",{parentName:"li"},"token_id")," \uc790\uccb4")),(0,o.kt)("p",null,"\uc608\uc2dc:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"https://paras.id/token/x.paras.near::387427/387427:373\n")),(0,o.kt)("h3",{id:"mintbase-\ud1a0\ud070-url"},"Mintbase \ud1a0\ud070 URL"),(0,o.kt)("p",null,"\ub2e4\uc2dc \ub2f9\uc2e0\uc744 \uc704\ud574 \uc870\uc0ac\ud55c \uacb0\uacfc\uc785\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"https://www.mintbase.io/thing/[1]:[2]\n")),(0,o.kt)("p",null,"\uc5ec\uae30\uc11c:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"[1]"," - ",(0,o.kt)("inlineCode",{parentName:"li"},"meta_id")," ( Mintbase\uc758 ",(0,o.kt)("inlineCode",{parentName:"li"},"EventLogData.data"),"\ub294 ",(0,o.kt)("inlineCode",{parentName:"li"},"meta_id"),"\ub97c \ud3ec\ud568\ud558\ub294 \ubb38\uc790\uc5f4\ud654\ub41c JSON \ubc30\uc5f4\uc785\ub2c8\ub2e4.)"),(0,o.kt)("li",{parentName:"ul"},"[2]"," - \ucee8\ud2b8\ub799\ud2b8 \uacc4\uc815 \uc8fc\uc18c \uc800\uc7a5(\uae30\ubcf8\uc801\uc73c\ub85c Receipt\uc758 \uc218\uc2e0\uc790 ID)")),(0,o.kt)("p",null,"\uc608\uc2dc:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"https://www.mintbase.io/thing/70eES-icwSw9iPIkUluMHOV055pKTTgQgTiXtwy3Xus:vnartistsdao.mintbase1.near\n")),(0,o.kt)("p",null,"\ub9c1\ud06c \ub9cc\ub4e4\uae30\ub97c \uc2dc\uc791\ud558\uaca0\uc2b5\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title=main.py",title:"main.py"},'def format_paras_nfts(data, receipt_execution_outcome):\n    links = []\n\n    for data_element in data:\n        for token_id in data_element.get("token_ids", []):\n            first_part_of_token_id = token_id.split(":")[0]\n            links.append(\n                f"https://paras.id/token/{receipt_execution_outcome.receipt.receiver_id}::{first_part_of_token_id}/{token_id}"\n            )\n\n    return {"owner": data[0].get("owner_id"), "links": links}\n\ndef format_mintbase_nfts(data, receipt_execution_outcome):\n    links = []\n    for data_block in data:\n        try:\n            memo = json.loads(data_block.get("memo"))\n        except json.JSONDecodeError:\n            print(\n                f"Receipt ID: `{receipt_execution_outcome.receipt.receipt_id}`\\nMemo: `{memo}`\\nError during parsing Mintbase memo from JSON string to dict"\n            )\n            return\n\n        meta_id = memo.get("meta_id")\n        links.append(\n            f"https://www.mintbase.io/thing/{meta_id}:{receipt_execution_outcome.receipt.receiver_id}"\n        )\n\n    return {"owner": data[0].get("owner_id"), "links": links}\n')),(0,o.kt)("p",null,"receipt_id\ub97c \ucd9c\ub825\ud560 \uc608\uc815\uc774\ubbc0\ub85c ",(0,o.kt)("a",{parentName:"p",href:"https://explorer.near.org"},"NEAR \uc775\uc2a4\ud50c\ub85c\ub7ec"),"\uc5d0\uc11c \ub9c8\ucf13\ud50c\ub808\uc774\uc2a4 \uc774\ub984, \uc18c\uc720\uc790 \uacc4\uc815 \uc774\ub984\uacfc \ud568\uaed8 NFT\uc5d0 \ub300\ud55c \ub9c1\ud06c \ubaa9\ub85d\uc744 \uac80\uc0c9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title=main.py",title:"main.py"},'if receipt_execution_outcome.receipt.receiver_id.endswith(\n    ".paras.near"\n):\n    output = {\n        "receipt_id": receipt_execution_outcome.receipt.receipt_id,\n        "marketplace": "Paras",\n        "nfts": format_paras_nfts(\n            parsed_log["data"], receipt_execution_outcome\n        ),\n    }\n')),(0,o.kt)("p",null,"\uc5ec\uae30\uc11c \ubb34\uc2a8 \uc77c\uc774 \uc77c\uc5b4\ub098\uace0 \uc788\ub294\uc9c0\uc5d0 \ub300\ud574 \ub9d0\uc500\ub4dc\ub9ac\uaca0\uc2b5\ub2c8\ub2e4. Receipt\uc758 \uc218\uc2e0\uc790 \uacc4\uc815 \uc774\ub984\uc774 ",(0,o.kt)("inlineCode",{parentName:"p"},".paras.near"),"(\uc608: ",(0,o.kt)("inlineCode",{parentName:"p"},"x.paras.near"),")\ub85c \ub05d\ub098\ub294 \uacbd\uc6b0, Paras \ub9c8\ucf13\ud50c\ub808\uc774\uc2a4\uc5d0\uc11c \uc628 \uac83\uc774\ubbc0\ub85c, \ud574\ub2f9 \ubcc0\uc218\ub97c \ubcc0\uacbd\ud569\ub2c8\ub2e4."),(0,o.kt)("p",null,"Mintbase \ucc28\ub840\uc5d0\uc11c\ub294, ",(0,o.kt)("a",{parentName:"p",href:"https://twitter.com/nategeier"},"Nate"),"\uc640 \uadf8\uc758 \ud300\uc774 \uc774\ubbf8 ",(0,o.kt)("a",{parentName:"p",href:"/near_docs/zh-CN/tutorials/indexer/migrating-to-near-lake-framework"},"NEAR Lake Framework\ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158"),"\ud558\uc600\uc2b5\ub2c8\ub2e4. \uc778\uc0ac\ud558\uace0, \ub9c1\ud06c\ub97c \ub9cc\ub4e4\uc5b4 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title=main.py",title:"main.py"},'    elif re.search(\n        ".mintbase\\d+.near", receipt_execution_outcome.receipt.receiver_id\n    ):\n        output = {\n            "receipt_id": receipt_execution_outcome.receipt.receipt_id,\n            "marketplace": "Mintbase",\n            "nfts": format_mintbase_nfts(\n                parsed_log["data"], receipt_execution_outcome\n            ),\n        }\n    else:\n        continue\n')),(0,o.kt)("p",null,"Paras\uc640 \uac70\uc758 \uac19\uc740 \uc774\uc57c\uae30\uc774\uc9c0\ub9cc, \uc870\uae08 \ub354 \ubcf5\uc7a1\ud569\ub2c8\ub2e4. Mintbase \ub9c8\ucf13\ud50c\ub808\uc774\uc2a4\uc758 \ud2b9\uc9d5\uc740 \ub2e8\uc77c \ub9c8\ucf13\ud50c\ub808\uc774\uc2a4\uac00 \uc544\ub2c8\ub77c\ub294 \uac83\uc785\ub2c8\ub2e4! \ubaa8\ub4e0 Mintbase \uc0ac\uc6a9\uc790\ub294 \uc790\uc2e0\uc758 \uc0c1\uc810\uacfc \ubcc4\ub3c4\uc758 \ucee8\ud2b8\ub799\ud2b8\ub97c \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub9ac\uace0 \uadf8 \ucee8\ud2b8\ub799\ud2b8 \uc8fc\uc18c\ub294 ",(0,o.kt)("inlineCode",{parentName:"p"},"mintbaseN.near"),"(\uc5ec\uae30\uc11c ",(0,o.kt)("inlineCode",{parentName:"p"},"N"),"\uc740 \uc22b\uc790)\ub85c \ub05d\ub098\ub294 \ub3d9\uc77c\ud55c \uc6d0\uce59\uc744 \ub530\ub974\ub294 \uac83\ucc98\ub7fc \ubcf4\uc785\ub2c8\ub2e4(\uc608: ",(0,o.kt)("inlineCode",{parentName:"p"},"nate.mintbase1.near"),")."),(0,o.kt)("p",null,"ExecutionOutcome \uc218\uc2e0\uc790\uac00 Mintbase\uc5d0\uc11c \uc654\ub2e4\uace0 \uc815\uc758\ud55c \ud6c4\uc5d0\ub294 Paras\uc640 \ub3d9\uc77c\ud55c \uc791\uc5c5\uc744 \uc218\ud589\ud569\ub2c8\ub2e4."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"marketplace")," \ubcc0\uc218 \ubcc0\uacbd"),(0,o.kt)("li",{parentName:"ol"},"\uc18c\uc720\uc790 \ubc0f \uc81c\uc791\ub41c \ub9c1\ud06c\uac00 \ud3ec\ud568\ub41c NFT \ubaa9\ub85d \uc218\uc9d1")),(0,o.kt)("p",null,"\uadf8\ub9ac\uace0 \ucd9c\ub825\uc744 \ud130\ubbf8\ub110\uc5d0 \ucd9c\ub825\ud569\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title=main.py",title:"main.py"},"print(json.dumps(output, indent=4))\n")),(0,o.kt)("p",null,"\ubaa8\ub4e0 \ucf54\ub4dc\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"title=main.py",title:"main.py"},'def format_paras_nfts(data, receipt_execution_outcome):\n    links = []\n\n    for data_element in data:\n        for token_id in data_element.get("token_ids", []):\n            first_part_of_token_id = token_id.split(":")[0]\n            links.append(\n                f"https://paras.id/token/{receipt_execution_outcome.receipt.receiver_id}::{first_part_of_token_id}/{token_id}"\n            )\n\n    return {"owner": data[0].get("owner_id"), "links": links}\n\n\ndef format_mintbase_nfts(data, receipt_execution_outcome):\n    links = []\n    for data_block in data:\n        try:\n            memo = json.loads(data_block.get("memo"))\n        except json.JSONDecodeError:\n            print(\n                f"Receipt ID: `{receipt_execution_outcome.receipt.receipt_id}`\\nMemo: `{memo}`\\nError during parsing Mintbase memo from JSON string to dict"\n            )\n            return\n\n        meta_id = memo.get("meta_id")\n        links.append(\n            f"https://www.mintbase.io/thing/{meta_id}:{receipt_execution_outcome.receipt.receiver_id}"\n        )\n\n    return {"owner": data[0].get("owner_id"), "links": links}\n\n\nasync def handle_streamer_message(streamer_message: near_primitives.StreamerMessage):\n    for shard in streamer_message.shards:\n        for receipt_execution_outcome in shard.receipt_execution_outcomes:\n            for log in receipt_execution_outcome.execution_outcome.outcome.logs:\n                if not log.startswith("EVENT_JSON:"):\n                    continue\n                try:\n                    parsed_log = json.loads(log[len("EVENT_JSON:") :])\n                except json.JSONDecodeError:\n                    print(\n                        f"Receipt ID: `{receipt_execution_outcome.receipt.receipt_id}`\\nError during parsing logs from JSON string to dict"\n                    )\n                    continue\n\n                if (\n                    parsed_log.get("standard") != "nep171"\n                    or parsed_log.get("event") != "nft_mint"\n                ):\n                    continue\n\n                if receipt_execution_outcome.receipt.receiver_id.endswith(\n                    ".paras.near"\n                ):\n                    output = {\n                        "receipt_id": receipt_execution_outcome.receipt.receipt_id,\n                        "marketplace": "Paras",\n                        "nfts": format_paras_nfts(\n                            parsed_log["data"], receipt_execution_outcome\n                        ),\n                    }\n                elif re.search(\n                    ".mintbase\\d+.near", receipt_execution_outcome.receipt.receiver_id\n                ):\n                    output = {\n                        "receipt_id": receipt_execution_outcome.receipt.receipt_id,\n                        "marketplace": "Mintbase",\n                        "nfts": format_mintbase_nfts(\n                            parsed_log["data"], receipt_execution_outcome\n                        ),\n                    }\n                else:\n                    continue\n\n                print(json.dumps(output, indent=4))\n')),(0,o.kt)("p",null,"\uadf8\ub9ac\uace0 \uadf8\uac8c \uc804\ubd80\uac00 \uc544\ub2d9\ub2c8\ub2e4. \uc778\ub371\uc11c\ub97c \uc2e4\ud589\ud558\uc5ec NFT \ubbfc\ud305\uc744 \uac10\uc2dc\ud558\uace0 \ud558\ub098\ub3c4 \ub193\uce58\uc9c0 \ub9c8\uc2ed\uc2dc\uc624."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"python3 main.py\n")),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"\uc778\ub371\uc11c\ub97c \uc2e4\ud589\ud558\ub294 \ub370 \ubb38\uc81c\uac00 \uc788\uc2b5\ub2c8\uae4c? ",(0,o.kt)("a",{parentName:"p",href:"/near_docs/zh-CN/tutorials/indexer/credentials"},"\uc790\uaca9 \uc99d\uba85")," \ubd80\ubd84\uc744 \uac74\ub108\ub6f0\uc9c0 \uc54a\uc558\ub294\uc9c0 \ud655\uc778\ud558\uc138\uc694 :)")),(0,o.kt)("p",null,"\ucd9c\ub825 \uc608\uc2dc:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'{\n    "receipt_id": "8rMK8rxb3WmFcSfM3ahFoeeoBF92pad3tpsqKoSWurr2",\n    "marketplace": "Mintbase",\n    "nfts": {\n        "owner": "vn-artists-dao.near",\n        "links": [\n            "https://www.mintbase.io/thing/aqdCBHB9_2XZY7pwXRRu5rGDeLQl7Q8KgNud1wKgnGo:vnartistsdao.mintbase1.near"\n        ]\n    }\n}\n{\n    "receipt_id": "ArRh94Fe1LKF9yPrAdzrMozWoxMVQbEW2Z2Zf4fsSsce",\n    "marketplace": "Paras",\n    "nfts": {\n        "owner": "eeaeb516e0945893ac01eaf547f499abdbd344831c5fcbefa1a5c0a9f303cc5c",\n        "links": [\n            "https://paras.id/token/x.paras.near::432714/432714:1"\n        ]\n    }\n}\n')),(0,o.kt)("h2",{id:"\uacb0\ub860"},"\uacb0\ub860"),(0,o.kt)("p",null,"\uc815\ub9d0 \uc7ac\ubc0c\uc9c0 \uc54a\ub098\uc694? \uc6b0\ub9ac\uac00 \ud55c \uc77c\uc744 \uc694\uc57d\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://nomicon.io/Standards/EventsFormat"},"\uc774\ubca4\ud2b8"),"\uc5d0 \ub300\ud574 \ubc30\uc6e0\uc2b5\ub2c8\ub2e4."),(0,o.kt)("li",{parentName:"ul"},"\uc774\uc81c \uc774\ubca4\ud2b8\ub97c \ud314\ub85c\uc6b0\ud558\ub294 \ubc29\ubc95\uc744 \uc774\ud574\ud588\uc2b5\ub2c8\ub2e4."),(0,o.kt)("li",{parentName:"ul"},"\ucee8\ud2b8\ub799\ud2b8 \uac1c\ubc1c\uc790\ub85c\uc11c \uc774\ubca4\ud2b8\ub97c \uc0ac\uc6a9\ud558\uace0 \uc790\uc2e0\uc758 \uc774\ubca4\ud2b8\ub97c \ub0b4\ubcf4\ub0bc \uc218 \uc788\ub2e4\ub294 \uc0ac\uc2e4\uc744 \uc54c\uc558\uc73c\ubbc0\ub85c, \uc774\uc81c \ud574\ub2f9 \uc774\ubca4\ud2b8\ub97c \ucd94\uc801\ud558\ub294 \uc778\ub371\uc11c\ub97c \ub9cc\ub4dc\ub294 \ubc29\ubc95\uc5d0 \ub300\ud574 \uc54c\uac8c \ub418\uc5c8\uc2b5\ub2c8\ub2e4."),(0,o.kt)("li",{parentName:"ul"},"NFT \ubbfc\ud305 \ud504\ub85c\uc138\uc2a4\ub97c \uc790\uc138\ud788 \uc0b4\ud3b4\ubcf4\uc558\uc73c\uba70, \ucd94\uac00 \uc2e4\ud5d8\uc744 \ud1b5\ud574 ",(0,o.kt)("inlineCode",{parentName:"li"},"nft_transfer")," \uc774\ubca4\ud2b8\ub97c \ucd94\uc801\ud558\ub294 \ubc29\ubc95\uc744 \uc54c\uc544\ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.")),(0,o.kt)("p",null,"\uc774 \ud29c\ud1a0\ub9ac\uc5bc\uc758 \uc790\ub8cc\ub294 \ubb38\uc790 \uadf8\ub300\ub85c ",(0,o.kt)("a",{parentName:"p",href:"https://nomicon.io/Standards/EventsFormat"},"\uc774\ubca4\ud2b8 \ud615\uc2dd"),"\uc744 \ub530\ub974\ub294 \ubaa8\ub4e0 \uc774\ubca4\ud2b8\uc5d0 \ub300\ud574 \ucd94\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,o.kt)("p",null,"\uac70\uae30\uc5d0\uc11c \ubc1c\ud589\ub41c \ucd5c\uc2e0 NFT\uc5d0 \ub300\ud574 \uc54c\uc544\ubcf4\uace0, \uc774\ub97c \uc218\uc9d1\ud558\ub294 \uac00\uc7a5 \ube60\ub978 \uc0ac\ub78c\uc774 \ub418\uae30 \uc704\ud55c \uc804\uc6a9 \uc778\ub371\uc11c\uac00 \uc788\ub2e4\ub294 \uac83\uc740 \ub9d0\ud560 \uac83\ub3c4 \uc5c6\uc2b5\ub2c8\ub2e4."),(0,o.kt)("p",null,"\uc0ac\ub0e5\ud558\ub7ec \uac00\ubd05\uc2dc\ub2e4! \ud83e\udd88"),(0,o.kt)("admonition",{title:"\ud29c\ud1a0\ub9ac\uc5bc \uc18c\uc2a4 \ucf54\ub4dc",type:"note"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("a",{parentName:"p",href:"https://github.com/near-examples/near-lake-nft-indexer"},(0,o.kt)("inlineCode",{parentName:"a"},"near-examples/near-lake-nft-indexer")),": \uc774 \ud29c\ud1a0\ub9ac\uc5bc\uc758 \uc18c\uc2a4 \ucf54\ub4dc")))}_.isMDXComponent=!0}}]);