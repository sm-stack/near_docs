"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4163],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),i=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=i(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=i(n),m=r,k=d["".concat(s,".").concat(m)]||d[m]||p[m]||l;return n?a.createElement(k,o(o({ref:t},u),{},{components:n})):a.createElement(k,o({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var i=2;i<l;i++)o[i]=n[i];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},17741:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>m,frontMatter:()=>c,metadata:()=>i,toc:()=>p});var a=n(87462),r=n(63366),l=(n(67294),n(3905)),o=["components"],c={sidebar_position:2},s="\ucf5c\ubc31",i={unversionedId:"sdk/rust/cross-contract/callbacks",id:"sdk/rust/cross-contract/callbacks",title:"\ucf5c\ubc31",description:"NEAR \ud504\ub85c\ud1a0\ucf5c\uc740 \uc791\uc5c5 \uc99d\uba85(Proof-of-Work) \ube14\ub85d\uccb4\uc778\uacfc \ub2e4\ub974\uac8c \uc791\ub3d9\ud558\ub294 \uc0e4\ub529\ub41c \uc9c0\ubd84 \uc99d\uba85(Proof-of-Stake) \ube14\ub85d\uccb4\uc778\uc785\ub2c8\ub2e4. \uae30\ubcf8 Rust(Wasm\uc73c\ub85c \ucef4\ud30c\uc77c\ub428) \uc2a4\ub9c8\ud2b8 \ucee8\ud2b8\ub799\ud2b8 \uc0c1\ud638 \uc791\uc6a9\ud560 \ub54c, \uad50\ucc28 \ucee8\ud2b8\ub799\ud2b8 \ud638\ucd9c(cross-contract call)\uc740 \ube44\ub3d9\uae30\uc2dd\uc785\ub2c8\ub2e4. \ucf5c\ubc31\uc740 \uad50\ucc28 \ucee8\ud2b8\ub799\ud2b8 \ud638\ucd9c\uc758 \uacb0\uacfc\ub97c \uac00\uc838\uc624\uac70\ub098, \uad50\ucc28 \ucee8\ud2b8\ub799\ud2b8 \ud638\ucd9c\uc774 \uc131\uacf5\ud588\ub294\uc9c0 \uc2e4\ud328\ud588\ub294\uc9c0 \uc54c\ub824\uc8fc\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4.",source:"@site/../docs/sdk/rust/cross-contract/callbacks.md",sourceDirName:"sdk/rust/cross-contract",slug:"/sdk/rust/cross-contract/callbacks",permalink:"/near_docs/sdk/rust/cross-contract/callbacks",draft:!1,editUrl:"https://github.com/near/docs/edit/master/website/../docs/sdk/rust/cross-contract/callbacks.md",tags:[],version:"current",lastUpdatedBy:"[sm-stack]",lastUpdatedAt:1678337636,formattedLastUpdatedAt:"Mar 9, 2023",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"sdk",previous:{title:"\uc9c1\ub82c\ud654 \ud504\ub85c\ud1a0\ucf5c",permalink:"/near_docs/sdk/rust/contract-interface/serialization-interface"},next:{title:"Promise: \uc18c\uac1c",permalink:"/near_docs/sdk/rust/promises/intro"}},u={},p=[{value:"\uacc4\uc0b0\uae30 \uc608\uc2dc",id:"\uacc4\uc0b0\uae30-\uc608\uc2dc",level:2},{value:"\ud5c8\uc6a9 \ubaa9\ub85d \uc608\uc2dc",id:"\ud5c8\uc6a9-\ubaa9\ub85d-\uc608\uc2dc",level:2}],d={toc:p};function m(e){var t=e.components,n=(0,r.Z)(e,o);return(0,l.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"\ucf5c\ubc31"},"\ucf5c\ubc31"),(0,l.kt)("p",null,"NEAR \ud504\ub85c\ud1a0\ucf5c\uc740 \uc791\uc5c5 \uc99d\uba85(Proof-of-Work) \ube14\ub85d\uccb4\uc778\uacfc \ub2e4\ub974\uac8c \uc791\ub3d9\ud558\ub294 \uc0e4\ub529\ub41c \uc9c0\ubd84 \uc99d\uba85(Proof-of-Stake) \ube14\ub85d\uccb4\uc778\uc785\ub2c8\ub2e4. \uae30\ubcf8 Rust(Wasm\uc73c\ub85c \ucef4\ud30c\uc77c\ub428) \uc2a4\ub9c8\ud2b8 \ucee8\ud2b8\ub799\ud2b8 \uc0c1\ud638 \uc791\uc6a9\ud560 \ub54c, \uad50\ucc28 \ucee8\ud2b8\ub799\ud2b8 \ud638\ucd9c(cross-contract call)\uc740 \ube44\ub3d9\uae30\uc2dd\uc785\ub2c8\ub2e4. \ucf5c\ubc31\uc740 \uad50\ucc28 \ucee8\ud2b8\ub799\ud2b8 \ud638\ucd9c\uc758 \uacb0\uacfc\ub97c \uac00\uc838\uc624\uac70\ub098, \uad50\ucc28 \ucee8\ud2b8\ub799\ud2b8 \ud638\ucd9c\uc774 \uc131\uacf5\ud588\ub294\uc9c0 \uc2e4\ud328\ud588\ub294\uc9c0 \uc54c\ub824\uc8fc\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4."),(0,l.kt)("p",null,"\uad50\ucc28 \ucee8\ud2b8\ub799\ud2b8 \ud638\ucd9c\uc744 \uc791\uc131\ud558\ub294 \uae30\uc220\uc5d0\ub294 ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/near/near-sdk-rs/blob/master/examples/cross-contract-calls/high-level/src/lib.rs"},"\ub192\uc740 \uc218\uc900")," \ubc0f ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/near/near-sdk-rs/blob/master/examples/cross-contract-calls/low-level/src/lib.rs"},"\ub0ae\uc740 \uc218\uc900"),'\uc758 \ub450 \uac00\uc9c0 \uae30\uc220\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ubb38\uc11c\ub294 \uc8fc\ub85c \ub192\uc740 \uc218\uc900\uc758 \uc811\uadfc \ubc29\uc2dd\uc5d0 \uc911\uc810\uc744 \ub458 \uac83\uc785\ub2c8\ub2e4. \uc704\uc5d0 \ub9c1\ud06c\ub41c \uac83\ucc98\ub7fc, Rust SDK \ub808\ud37c\uc9c0\ud1a0\ub9ac\uc5d0\ub294 \uc774\ub97c \ubcf4\uc5ec\uc8fc\ub294 \ub450 \uac00\uc9c0 \uc608\uc2dc\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc608\ub294 "\uc790\uccb4"\ub85c\uc758 \uad50\ucc28 \ucee8\ud2b8\ub799\ud2b8 \ud638\ucd9c\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ub192\uc740 \uc218\uc900\uc758 \uc811\uadfc \ubc29\uc2dd\uc744 \ubcf4\uc5ec\uc8fc\ub294 \ub450 \uac00\uc9c0 \uc608\ub97c \ubcf4\uc5ec \ub4dc\ub9ac\uaca0\uc2b5\ub2c8\ub2e4.'),(0,l.kt)("h2",{id:"\uacc4\uc0b0\uae30-\uc608\uc2dc"},"\uacc4\uc0b0\uae30 \uc608\uc2dc"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"#[ext_contract(...)]")," \uad6c\ubb38\uc744 \uc0ac\uc6a9\ud558\uc5ec \uad50\ucc28 \ucee8\ud2b8\ub799\ud2b8 \ud638\ucd9c\uc744 \uc218\ud589\ud560 \uc218 \uc788\ub294 \ud5ec\ud37c \ub9e4\ud06c\ub85c\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub294 Rust \ud2b9\uc131\uc744 \uac00\uc838\uc640 \uc815\uc801 \uba54\uc11c\ub4dc\uac00 \uc788\ub294 \ubaa8\ub4c8\ub85c \ubcc0\ud658\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uac01\uac01\uc758 \uc815\uc801 \uba54\uc11c\ub4dc\ub294 Trait\uc5d0 \uc758\ud574 \uc815\uc758\ub41c \uc704\uce58 \uc778\uc790\uc640, ",(0,l.kt)("inlineCode",{parentName:"p"},"receiver_id"),", \ucca8\ubd80\ub41c \ubcf4\uc99d\uae08 \ubc0f \uac00\uc2a4\uc758 \uc591\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc0c8 ",(0,l.kt)("inlineCode",{parentName:"p"},"Promise"),"\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4."),(0,l.kt)("p",null,"\uc608\ub97c \ub4e4\uc5b4 \uacc4\uc0b0\uae30 \ucee8\ud2b8\ub799\ud2b8\uc758 Trait\uc744 \uc815\uc758\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"#[ext_contract(ext_calculator)]\ntrait Calculator {\n    fn mult(&self, a: U64, b: U64) -> U128;\n\n    fn sum(&self, a: U128, b: U128) -> U128;\n}\n")),(0,l.kt)("p",null,"\uc774\ub294 \ub2e4\uc74c \ucf54\ub4dc\uc640 \ub3d9\uc77c\ud569\ub2c8\ub2e4."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'mod ext_calculator {\n    pub fn mult(a: U64, b: U64, receiver_id: &AccountId, deposit: Balance, gas: Gas) -> Promise {\n        Promise::new(receiver_id.clone())\n            .function_call(\n                b"mult",\n                json!({ "a": a, "b": b }).to_string().as_bytes(),\n                deposit,\n                gas,\n            )\n    }\n\n    pub fn sum(a: U128, b: U128, receiver_id: &AccountId, deposit: Balance, gas: Gas) -> Promise {\n        // ...\n    }\n}\n')),(0,l.kt)("p",null,"\uacc4\uc0b0\uae30\uac00 ",(0,l.kt)("inlineCode",{parentName:"p"},"calc.near"),"\uc5d0 \ubc30\ud3ec\ub418\uc5c8\ub2e4\uace0 \uac00\uc815\ud558\uace0, \ub2e4\uc74c\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'#[near_bindgen]\nimpl Contract {\n    pub fn sum_a_b(&mut self, a: U128, b: U128) -> Promise {\n        let calculator_account_id: AccountId = "calc.near".parse().unwrap();\n        // Call the method `sum` on the calculator contract.\n        // Any unused GAS will be attached since the default GAS weight is 1.\n        // Attached deposit is defaulted to 0.\n        ext_calculator::ext(calculator_account_id)\n            .sum(a, b)\n    }\n}\n')),(0,l.kt)("h2",{id:"\ud5c8\uc6a9-\ubaa9\ub85d-\uc608\uc2dc"},"\ud5c8\uc6a9 \ubaa9\ub85d \uc608\uc2dc"),(0,l.kt)("p",null,"\ub2e4\uc74c\uc73c\ub85c \uacc4\uc815\uc774 \ubaa9\ub85d\uc5d0 \uc788\ub294\uc9c0 \uc5ec\ubd80\ub97c \ubc18\ud658\ud558\ub294 \ud5c8\uc6a9 \ubaa9\ub85d \uc2a4\ub9c8\ud2b8 \ucee8\ud2b8\ub799\ud2b8\uc5d0 \ub300\ud574, \uad50\ucc28 \ucee8\ud2b8\ub799\ud2b8 \ud638\ucd9c\uc744 \ud558\ub294 \uac04\ub2e8\ud55c \uc608\uc2dc\ub97c \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4."),(0,l.kt)("p",null,"\uad50\ucc28 \ucee8\ud2b8\ub799\ud2b8 \ud638\ucd9c\uc758 \uc77c\ubc18\uc801\uc778 \ud328\ud134\uc740, \uc678\ubd80 \uc2a4\ub9c8\ud2b8 \ucee8\ud2b8\ub799\ud2b8\uc5d0\uc11c \uba54\uc11c\ub4dc\ub97c \ud638\ucd9c\ud558\uace0, ",(0,l.kt)("inlineCode",{parentName:"p"},".then")," \uad6c\ubb38\uc744 \uc0ac\uc6a9\ud558\uc5ec \ucf5c\ubc31\uc744 \uc9c0\uc815\ud55c \ub2e4\uc74c Promise\uc758 \uacb0\uacfc \ub610\ub294 \uc0c1\ud0dc\ub97c \uac80\uc0c9\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \ucf5c\ubc31\uc740 \uc77c\ubc18\uc801\uc73c\ub85c \ud638\ucd9c\ud558\ub294 \uc2a4\ub9c8\ud2b8 \ucee8\ud2b8\ub799\ud2b8 \ub0b4\ubd80\uc5d0 \uc788\uc2b5\ub2c8\ub2e4. \ucf5c\ubc31 \ud568\uc218\uc5d0 \uc0ac\uc6a9\ub418\ub294 \ud2b9\uc218 \ub9e4\ud06c\ub85c\ub294 ",(0,l.kt)("a",{parentName:"p",href:"https://docs.rs/near-sdk-core/latest/near_sdk_core/struct.AttrSigInfo.html#structfield.is_private"},"#[private]"),"\uc785\ub2c8\ub2e4. \uc544\ub798 \uc608\uc5d0\uc11c \uc774 \ud328\ud134\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,l.kt)("p",null,"\ub2e4\uc74c \uc608\uc81c\uc5d0\uc11c\ub294 \ub192\uc740 \uc218\uc900\uc758 \uad50\ucc28 \ucee8\ud2b8\ub799\ud2b8 \uc811\uadfc \ubc29\uc2dd\uc744 \uc0ac\uc6a9\ud558\uc5ec, \ucf5c\ubc31\uc5d0 \ub300\ud55c \ub450 \uac00\uc9c0 \uc77c\ubc18\uc801\uc778 \uc811\uadfc \ubc29\uc2dd\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. \ub192\uc740 \uc218\uc900\uc758 \uad50\ucc28 \ucee8\ud2b8\ub799\ud2b8 \ud638\ucd9c\uc744 \uc791\uc131\ud560 \ub54c \ud638\ucd9c\ub418\ub294 \uc2a4\ub9c8\ud2b8 \ucee8\ud2b8\ub799\ud2b8\uc5d0 \ub300\ud55c \uc778\ud130\ud398\uc774\uc2a4\ub85c \ud2b9\uc218\ud55c ",(0,l.kt)("a",{parentName:"p",href:"https://doc.rust-lang.org/rust-by-example/trait.html"},"\ud2b9\uc131"),"\uc774 \uc124\uc815\ub429\ub2c8\ub2e4."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"#[ext_contract(ext_allowlist)]\npub trait ExtAllowlist {\n    fn is_allowlisted(staking_pool_account_id: AccountId) -> bool;\n}\n")),(0,l.kt)("p",null,"\ud2b9\uc131\uc744 \uc0dd\uc131\ud55c \ud6c4, \uacc4\uc815 ",(0,l.kt)("inlineCode",{parentName:"p"},"mike.testnet"),"\uc774 \ud5c8\uc6a9 \ubaa9\ub85d\uc5d0 \uc788\ub294\uc9c0 \ubb3b\ub294 \ud5c8\uc6a9 \ubaa9\ub85d \uc2a4\ub9c8\ud2b8 \ucee8\ud2b8\ub799\ud2b8\uc5d0 \ub300\ud574 \uad50\ucc28 \ucee8\ud2b8\ub799\ud2b8 \ud638\ucd9c\uc744 \ud558\ub294 \ub450 \uac00\uc9c0 \uac04\ub2e8\ud55c \ud568\uc218\ub97c \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uba54\uc11c\ub4dc\ub294 \uc11c\ub85c \ub2e4\ub978 \uc811\uadfc \ubc29\uc2dd\uc744 \uc0ac\uc6a9\ud558\uc5ec ",(0,l.kt)("inlineCode",{parentName:"p"},"true"),"\ub97c \ubc18\ud658\ud560 \uac83\uc785\ub2c8\ub2e4. \uba3c\uc800 \uba54\uc11c\ub4dc\ub97c \uc0b4\ud3b4\ubcf8 \ub2e4\uc74c, \ucf5c\ubc31 \ub0b4 \ucc28\uc774\uc810\uc744 \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \uc774 \uc608\uc5d0\uc11c\ub294 \ub2e8\uc21c\ud654\ub97c \uc704\ud574 \uac12\uc774 \ud558\ub4dc\ucf54\ub529\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'pub const XCC_GAS: Gas = Gas(20000000000000);\nfn get_allowlist_contract() -> AccountId {\n    "allowlist.demo.testnet".parse().unwrap()\n}\nfn get_account_to_check() -> AccountId {\n    "mike.testnet".parse().unwrap()\n}\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"#[near_bindgen]\nimpl Contract {\n    pub fn xcc_use_promise_result() -> Promise {\n        // Call the method `is_allowlisted` on the allowlisted contract. Static GAS is only attached to the callback.\n        // Any unused GAS will be split between the function call and the callback since both have a default unused GAS weight of 1\n        // Attached deposit is defaulted to 0 for both the function call and the callback.\n        ext_allowlist::ext(get_allowlist_contract())\n            .is_allowlisted(get_account_to_check())\n            .then(\n                Self::ext(env::current_account_id())\n                .with_static_gas(XCC_GAS)\n                .callback_promise_result()\n            )\n    }\n\n    pub fn xcc_use_arg_macro(&mut self) -> Promise {\n        // Call the method `is_allowlisted` on the allowlisted contract. Attach static GAS equal to XCC_GAS only for the callback.\n        // Any unused GAS will be split between the function call and the callback since both have a default unused GAS weight of 1\n        // Attached deposit is defaulted to 0 for both the function call and the callback.\n        ext_allowlist::ext(get_allowlist_contract())\n            .is_allowlisted(get_account_to_check())\n            .then(\n                Self::ext(env::current_account_id())\n                    .with_static_gas(XCC_GAS)\n                    .callback_arg_macro()\n            )\n    }\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"ext_allowlist::ext()"),"\ub85c \uc2dc\uc791\ud558\uc5ec, ",(0,l.kt)("inlineCode",{parentName:"p"},"ext()"),"\uc5d0 \uc804\ub2ec\ub41c \uacc4\uc815\uc5d0\uc11c \uba54\uc11c\ub4dc\ub97c \ud638\ucd9c\ud558\uae30 \uc704\ud574 \ud2b9\uc131\uc744 \uc0ac\uc6a9\ud558\uace0 \uc788\uc74c\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. \uadf8\ub7f0 \ub2e4\uc74c \ud638\ucd9c\uc5d0 \ucca8\ubd80\ud560 \uac00\uc2a4\uc758 \uae30\ubcf8 \uc591\uc744 \uc9c0\uc815\ud558\ub294 \ub370\uc5d0 ",(0,l.kt)("inlineCode",{parentName:"p"},"with_static_gas()"),"\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uadf8\ub7f0 \ub2e4\uc74c ",(0,l.kt)("inlineCode",{parentName:"p"},"is_allow_listed()")," \uba54\uc11c\ub4dc\ub97c \ud638\ucd9c\ud558\uace0, \uc5f0\uacb0\ud558\ub824\ub294 \ub9e4\uac1c\ubcc0\uc218\ub97c \uc804\ub2ec\ud569\ub2c8\ub2e4."),(0,l.kt)("p",null,"\uc774\ub7ec\ud55c \ud568\uc218 \ud638\ucd9c\uc744 \uc218\ud589\ud560 \ub54c \uc8fc\uc758\ud574\uc57c \ud560 \uba87 \uac00\uc9c0 \uc0ac\ud56d\uc774 \uc788\uc2b5\ub2c8\ub2e4."),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},".with_attached_deposit()")," \uba54\uc11c\ub4dc\ub97c \uc9c0\uc815\ud558\uc5ec yocto\u24c3 \ub2e8\uc704\ub85c \u24c3 \ubcf4\uc99d\uae08\uc744 \ud638\ucd9c\uc5d0 \ucca8\ubd80\ud560 \uc218 \uc788\uc9c0\ub9cc, \uae30\ubcf8\uac12\uc740 0\uc785\ub2c8\ub2e4(1 \u24c3 = 1000000000000000000000000 yocto\u24c3 \ub610\ub294 1^24 yocto\u24c3)."),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},".with_static_gas()")," \uba54\uc11c\ub4dc\ub97c \uc9c0\uc815\ud558\uc5ec \uace0\uc815\ub41c \uc591\uc758 \uac00\uc2a4\ub97c \ucca8\ubd80\ud560 \uc218 \uc788\uc9c0\ub9cc, \uae30\ubcf8\uac12\uc740 0\uc785\ub2c8\ub2e4."),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},".with_unused_gas_weight()")," \uba54\uc11c\ub4dc\ub97c \uc9c0\uc815\ud558\uc5ec \ubbf8\uc0ac\uc6a9 \uac00\uc2a4 \uac00\uc911\uce58\ub97c \ucca8\ubd80\ud560 \uc218 \uc788\uc9c0\ub9cc, \uae30\ubcf8\uac12\uc740 1\uc785\ub2c8\ub2e4. \ubbf8\uc0ac\uc6a9 \uac00\uc2a4\ub294 \ud574\ub2f9 \uac00\uc911\uce58\uc5d0 \ub530\ub77c \ud604\uc7ac \uc2e4\ud589 \uc911\uc778 \ubaa8\ub4e0 \ud568\uc218 \uac04\uc5d0 \ubd84\ubc30\ub429\ub2c8\ub2e4. \ud568\uc218\uac00 1\uac1c\ub9cc \uc788\ub294 \uacbd\uc6b0, \uac00\uc911\uce58\uac00 1\ubcf4\ub2e4 \ud06c\uba74 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc740 \ubaa8\ub4e0 \uac00\uc2a4\uac00 \ud574\ub2f9 \ud568\uc218\ub85c \uc804\ub2ec\ub429\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uac00\uc911\uce58\ub97c 0\uc73c\ub85c \uc9c0\uc815\ud558\uba74, \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub294 \uac00\uc2a4\ub294 \ud574\ub2f9 \ud568\uc218\uc5d0 \uc804\ub2ec\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uac00\uc911\uce58\uac00 3\uc778 \ud568\uc218\uc640 \uac00\uc911\uce58\uac00 1\uc778 \ud568\uc218\uac00 \ub450 \uac1c \uc788\ub294 \uacbd\uc6b0, \uccab \ubc88\uc9f8 \ud568\uc218\ub294 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc740 \uac00\uc2a4\uc758 ",(0,l.kt)("inlineCode",{parentName:"li"},"3/4"),"\uc744 \uac00\uc838\uc624\uace0, \ub2e4\ub978 \ud568\uc218\ub294 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc740 \uac00\uc2a4\uc758 ",(0,l.kt)("inlineCode",{parentName:"li"},"1/4"),"\ub97c \uac00\uc838\uc635\ub2c8\ub2e4.")),(0,l.kt)("p",null,"\uc704 \uc2a4\ub2c8\ud3ab\uc758 \ub450 \uba54\uc11c\ub4dc\ub294 \ub9e4\uc6b0 \uc720\uc0ac\ud558\uc9c0\ub9cc, \uc2a4\ub9c8\ud2b8 \ucee8\ud2b8\ub799\ud2b8\uc5d0\uc11c \uac01\uac01 ",(0,l.kt)("inlineCode",{parentName:"p"},"callback_promise_result"),"\uc640 ",(0,l.kt)("inlineCode",{parentName:"p"},"callback_arg_macro"),"\ub77c\ub294 \ucf5c\ubc31\uc744 \ud638\ucd9c\ud55c\ub2e4\ub294 \uc810\uc740 \ub2e4\ub985\ub2c8\ub2e4. \uc774 \ub450 \ucf5c\ubc31\uc740 \uac12\uc744 \uc5bb\ub294 \ubc29\ubc95\uc5d0 \ub300\ud574 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'#[private]\npub fn callback_arg_macro(#[callback_unwrap] val: bool) -> bool {\n    val\n}\n\n#[private]\npub fn callback_promise_result() -> bool {\n    assert_eq!(env::promise_results_count(), 1, "ERR_TOO_MANY_RESULTS");\n    match env::promise_result(0) {\n        PromiseResult::NotReady => unreachable!(),\n        PromiseResult::Successful(val) => {\n            if let Ok(is_allowlisted) = near_sdk::serde_json::from_slice::<bool>(&val) {\n                is_allowlisted\n            } else {\n                env::panic_str("ERR_WRONG_VAL_RECEIVED")\n            }\n        },\n        PromiseResult::Failed => env::panic_str("ERR_CALL_FAILED"),\n    }\n}\n')),(0,l.kt)("p",null,"\uccab \ubc88\uc9f8 \uba54\uc11c\ub4dc\ub294 \uc778\uc790\uc5d0 \ub9e4\ud06c\ub85c\ub97c \uc0ac\uc6a9\ud558\uc5ec \uac12\uc744 \uc6d0\ud558\ub294 \uac12\uc73c\ub85c \ubcc0\ud658\ud569\ub2c8\ub2e4. \uc774 \uc811\uadfc \ubc29\uc2dd\uc5d0\uc11c \uac12\uc744 \uce90\uc2a4\ud305\ud560 \uc218 \uc5c6\uc73c\uba74 \ud328\ub2c9\uc774 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uc624\ub958\ub97c \uc815\uc0c1\uc801\uc73c\ub85c \ucc98\ub9ac\ud558\ub824\uba74 \uccab \ubc88\uc9f8 \ubc29\ubc95\uc744 \uc0ac\uc6a9\ud558\uac70\ub098, \ub300\uc2e0 ",(0,l.kt)("inlineCode",{parentName:"p"},"#[callback_result]")," \ub9e4\ud06c\ub85c\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uc5d0 \ub300\ud55c \uc608\ub294 \uc544\ub798\uc5d0\uc11c \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"#[private]\npub fn handle_callbacks(\n    // New pattern, will gracefully handle failed callback results\n    #[callback_result] b: Result<u8, near_sdk::PromiseError>,\n) {\n    if b.is_err() {\n        // ...\n    }\n}\n")),(0,l.kt)("p",null,"\ub450 \ubc88\uc9f8 \uba54\uc11c\ub4dc\ub294 Promise \uacb0\uacfc\uc5d0\uc11c \uac12\uc744 \uac00\uc838\uc624\uace0, \uae30\ubcf8\uc801\uc73c\ub85c ",(0,l.kt)("inlineCode",{parentName:"p"},"#[callback_result]")," \ub9e4\ud06c\ub85c\uc758 \ud655\uc7a5\ub41c \ubc84\uc804\uc785\ub2c8\ub2e4."),(0,l.kt)("p",null,"\uc774\uac8c \ub05d\uc785\ub2c8\ub2e4! \uad50\ucc28 \ucee8\ud2b8\ub799\ud2b8 \ud638\ucd9c\uc744 \uc218\ud589\ud558\uace0 \uacb0\uacfc\ub97c \uc218\uc2e0\ud558\ub294 \ubc29\ubc95\uc744 \uc774\ud574\ud558\ub294 \uac83\uc740 NEAR\uc5d0\uc11c \uc2a4\ub9c8\ud2b8 \ucee8\ud2b8\ub799\ud2b8\ub97c \uac1c\ubc1c\ud558\ub294 \ub370 \uc911\uc694\ud55c \ubd80\ubd84\uc785\ub2c8\ub2e4. \uad50\ucc28 \ucee8\ud2b8\ub799\ud2b8 \ud638\ucd9c \uc0ac\uc6a9\uc5d0 \ub300\ud55c \ub450 \uac00\uc9c0 \ud765\ubbf8\ub85c\uc6b4 \uc608\uc2dc\ub294 ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/near-examples/FT"},"\ub300\uccb4 \uac00\ub2a5\ud55c \ud1a0\ud070(FT)")," \ubc0f ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/near-examples/NFT"},"\ub300\uccb4 \ubd88\uac00\ub2a5 \ud1a0\ud070(NFT)")," \uc608\uc81c\uc5d0\uc11c \ucc3e\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4."))}m.isMDXComponent=!0}}]);