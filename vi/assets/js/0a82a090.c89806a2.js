"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[572],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>f});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),u=p(n),f=r,N=u["".concat(s,".").concat(f)]||u[f]||d[f]||i;return n?a.createElement(N,l(l({ref:t},m),{},{components:n})):a.createElement(N,l({ref:t},m))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5242:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>s,default:()=>f,frontMatter:()=>o,metadata:()=>p,toc:()=>d});var a=n(87462),r=n(63366),i=(n(67294),n(3905)),l=["components"],o={id:"utils_format",title:"Module: utils/format",sidebar_label:"utils/format",sidebar_position:0,custom_edit_url:null},s=void 0,p={unversionedId:"modules/utils_format",id:"version-near-api-js@1.1.0/modules/utils_format",title:"Module: utils/format",description:"Variables",source:"@site/near-api-js_versioned_docs/version-near-api-js@1.1.0/modules/utils_format.md",sourceDirName:"modules",slug:"/modules/utils_format",permalink:"/near_docs/vi/tools/near-api-js/reference/modules/utils_format",draft:!1,editUrl:null,tags:[],version:"near-api-js@1.1.0",sidebarPosition:0,frontMatter:{id:"utils_format",title:"Module: utils/format",sidebar_label:"utils/format",sidebar_position:0,custom_edit_url:null},sidebar:"defaultSidebar",previous:{title:"utils/exponential-backoff",permalink:"/near_docs/vi/tools/near-api-js/reference/modules/utils_exponential_backoff"},next:{title:"utils/key_pair",permalink:"/near_docs/vi/tools/near-api-js/reference/modules/utils_key_pair"}},m={},d=[{value:"Variables",id:"variables",level:2},{value:"NEAR_NOMINATION",id:"near_nomination",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"NEAR_NOMINATION_EXP",id:"near_nomination_exp",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"Functions",id:"functions",level:2},{value:"formatNearAmount",id:"formatnearamount",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"parseNearAmount",id:"parsenearamount",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-3",level:4}],u={toc:d};function f(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"variables"},"Variables"),(0,i.kt)("h3",{id:"near_nomination"},"NEAR","_","NOMINATION"),(0,i.kt)("p",null," ",(0,i.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,i.kt)("strong",{parentName:"p"},"NEAR","_","NOMINATION"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"BN")),(0,i.kt)("p",null,"Number of indivisible units in one NEAR. Derived from ",(0,i.kt)("a",{parentName:"p",href:"/near_docs/vi/tools/near-api-js/reference/modules/utils_format#near_nomination_exp"},"NEAR_NOMINATION_EXP"),"."),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/near/near-api-js/blob/ef6d7fbf/packages/near-api-js/src/utils/format.ts#L11"},"utils/format.ts:11")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"near_nomination_exp"},"NEAR","_","NOMINATION","_","EXP"),(0,i.kt)("p",null," ",(0,i.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,i.kt)("strong",{parentName:"p"},"NEAR","_","NOMINATION","_","EXP"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"24")),(0,i.kt)("p",null,"Exponent for calculating how many indivisible units are there in one NEAR. See ",(0,i.kt)("a",{parentName:"p",href:"/near_docs/vi/tools/near-api-js/reference/modules/utils_format#near_nomination"},"NEAR_NOMINATION"),"."),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/near/near-api-js/blob/ef6d7fbf/packages/near-api-js/src/utils/format.ts#L6"},"utils/format.ts:6")),(0,i.kt)("h2",{id:"functions"},"Functions"),(0,i.kt)("h3",{id:"formatnearamount"},"formatNearAmount"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"formatNearAmount"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"balance"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"fracDigits?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("p",null,"Convert account balance value from internal indivisible units to NEAR. 1 NEAR is defined by ",(0,i.kt)("a",{parentName:"p",href:"/near_docs/vi/tools/near-api-js/reference/modules/utils_format#near_nomination"},"NEAR_NOMINATION"),".\nEffectively this divides given amount by ",(0,i.kt)("a",{parentName:"p",href:"/near_docs/vi/tools/near-api-js/reference/modules/utils_format#near_nomination"},"NEAR_NOMINATION"),"."),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"balance")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"decimal string representing balance in smallest non-divisible NEAR units (as specified by ",(0,i.kt)("a",{parentName:"td",href:"/near_docs/vi/tools/near-api-js/reference/modules/utils_format#near_nomination"},"NEAR_NOMINATION"),")")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"fracDigits")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"NEAR_NOMINATION_EXP")),(0,i.kt)("td",{parentName:"tr",align:"left"},"number of fractional digits to preserve in formatted string. Balance is rounded to match given number of digits.")))),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("p",null,"Value in \u24c3"),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/near/near-api-js/blob/ef6d7fbf/packages/near-api-js/src/utils/format.ts#L28"},"utils/format.ts:28")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"parsenearamount"},"parseNearAmount"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"parseNearAmount"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"amt?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"null")),(0,i.kt)("p",null,"Convert human readable NEAR amount to internal indivisible units.\nEffectively this multiplies given amount by ",(0,i.kt)("a",{parentName:"p",href:"/near_docs/vi/tools/near-api-js/reference/modules/utils_format#near_nomination"},"NEAR_NOMINATION"),"."),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"amt?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},"decimal string (potentially fractional) denominated in NEAR.")))),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"null")),(0,i.kt)("p",null,"The parsed yocto\u24c3 amount or null if no amount was passed in"),(0,i.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/near/near-api-js/blob/ef6d7fbf/packages/near-api-js/src/utils/format.ts#L53"},"utils/format.ts:53")))}f.isMDXComponent=!0}}]);